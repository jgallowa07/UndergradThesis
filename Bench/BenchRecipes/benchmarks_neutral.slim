//rho = total length of all genomes in the popul

//devide all by 10N to see how fast they were running ... 


initialize() {

	N = n_ind;
	
	rho = size_rho;

	numLoci = 1e8;
		
	r = rho / (4*N);

	mutation_recombination_Rate = r / numLoci; 

	defineConstant("NumInd",N);

    	initializeMutationRate(mutation_recombination_Rate);

    	initializeMutationType("m1", 0.5, "f", 0.0);			//Neutral Mutations
    	initializeMutationType("m2", 0.5, "g", -5 / (2*N), 1.0);	//Deleterious Mutations
	
    	initializeGenomicElementType("g1", c(m1,m2), c(99.0,1.0));
    	initializeGenomicElement(g1, 0, numLoci-1);
    	initializeRecombinationRate(mutation_recombination_Rate);
	
	
}
1 late() { sim.addSubpop("p1", NumInd); 

	timeToRun = 10 * NumInd;

	sim.rescheduleScriptBlock(s1,timeToRun,timeToRun);
}
s1 10000 late() { 
	
	catn("Simulation Finished");
	sim.simulationFinished(); 

}


